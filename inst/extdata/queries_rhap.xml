<?xml version="1.0" encoding="UTF-8"?>
<queries>


 <aQuery>
		<all-regions/>
<supplyDemandQuery title="building floorspace per capita">
                    <axis1 name="Floorspace">input[@name]</axis1>
                    <axis2 name="Year">demand-physical[@vintage]</axis2>
                    <xPath buildList="true" dataName="percapita floorspace" group="false" sumAll="false"><![CDATA[
                         
                     declare function local:append-heirarchy($parent as node(), $append as node()) as node() {
                         let $scn := $parent/ancestor::scenario,
                              $rgn := $parent/ancestor::region,
                             $consumer := $parent/ancestor::gcam-consumer
                           return
                              document { element scenario {
                                                $scn/@*,
                                                element region {
                                                    $rgn/@*,
                                                    element gcam-consumer {
                                                        $consumer/@*,
                                                        $append
                                                    }
                                                }
                                            }
                            }
                     };  
                     declare function local:get-percapita($inputs as node()*) as node()* {
                     unordered {    
                     for $input in $inputs
                     let $new_input :=  
                     element input {
                         attribute type {'input'},
                         attribute name { $input/@name },
                         for $demand in $input/floorspace
                         return 
                             element demand-physical {
                             attribute vintage {$demand/@year},
                             (: TODO: hard coding units :)
                             attribute unit { 'm^2/person'},
                             (: floorspace is billion m^2 and population is 1000 people and we want m^2/persion :)
                             text { $demand/text() div $input/ancestor::gcam-consumer/subregional-population[@year=$demand/@year] * 1000000 }
                         }
                     },
                     $new_root := local:append-heirarchy($input/parent::*, $new_input)
                     return $new_root//text()
                     } 
                     };
                     declare function local:run-get-percapita($scenarios as xs:string*, $regions as xs:string*, $collection as xs:string) as node()* {     
                     let $regionsG := if(not($regions[1] = 'Global'))
                              then $regions
                              else distinct-values(collection($collection)/scenario/world/*[@type='region']/@name)
                     return
                     for $scenario in $scenarios,       
                     $region in $regionsG   
                     let $scenario_split := tokenize($scenario, ' '),       
                     $scenario_name := string-join($scenario_split[position() < last()], ' '),
			 	 	 $scenario_date := $scenario_split[last()],
			 	 	 $currTree := collection($collection)/scenario[@name = $scenario_name and @date = $scenario_date]/world/*[@type = 'region' and @name=$region]
                     return 
                        local:get-percapita($currTree/gcam-consumer//building-node-input)
                        
         }; 
                 local:run-get-percapita((:scenarios:), (:regions:), (:collection:))
                 
            
                    ]]></xPath>
                    <comments/>
                </supplyDemandQuery>
 </aQuery>

 
 <aQuery>
		<all-regions/>
        <demographicsQuery title="subregional income">
            <axis1 name="region">region</axis1>
            <axis2 name="Year">subregional-percapita-income</axis2>
            <xPath buildList="true" dataName="subregional-percapita-income" group="false" sumAll="false">gcam-consumer/subregional-percapita-income/node()</xPath>
            <comments/>
        </demographicsQuery>
 </aQuery>

 <aQuery>
		<all-regions/>
<emissionsQueryBuilder title="nonCO2 emissions by sector (excluding resource production)">
                <axis1 name="GHG">GHG</axis1>
                <axis2 name="Year">emissions</axis2>
                <xPath buildList="true" dataName="emissions" group="false" sumAll="false">*[@type = 'sector']//*[@type = 'GHG' and @name != 'CO2' and @name != 'CO2_FUG']/emissions/node()</xPath>
                <comments/>
            </emissionsQueryBuilder>
 </aQuery>


</queries>